services:
  app:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    networks:
      - laravel
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy

  web:
    image: nginx:alpine
    container_name: laravel_web
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel
    depends_on:
      - app

  db:
    image: postgres:16-alpine
    container_name: laravel_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-laravel}
      POSTGRES_USER: ${DB_USERNAME:-laravel}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - laravel
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-laravel}"]
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: redis:alpine
    container_name: laravel_cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  queue:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    container_name: laravel_queue
    restart: unless-stopped
    working_dir: /var/www/html
    command: php artisan queue:work --tries=3
    volumes:
      - ./:/var/www/html
    networks:
      - laravel
    depends_on:
      - app
      - cache

  scheduler:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    container_name: laravel_scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    command: >
      sh -c "while true; do
        php artisan schedule:run --verbose --no-interaction &
        sleep 60
      done"
    volumes:
      - ./:/var/www/html
    networks:
      - laravel
    depends_on:
      - app

networks:
  laravel:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local