version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    container_name: laravel_app
    user: "${USER_ID:-1000}:${GROUP_ID:-1000}"
    volumes:
      - .:/var/www/html
      - ~/.ssh:/home/laravel/.ssh:ro
      - ./storage/logs:/var/www/html/storage/logs
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=cache
      - REDIS_PORT=6379
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    networks:
      - laravel
    restart: on-failure

  web:
    image: nginx:alpine
    container_name: laravel_web
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./storage/logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - laravel
    restart: on-failure

  db:
    image: mysql:8.0
    container_name: laravel_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - laravel
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  cache:
    image: redis:alpine
    container_name: laravel_cache
    ports:
      - "6379:6379"
    networks:
      - laravel
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  queue:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    container_name: laravel_queue
    user: "${USER_ID:-1000}:${GROUP_ID:-1000}"
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    volumes:
      - .:/var/www/html
      - ./storage/logs:/var/www/html/storage/logs
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=cache
      - REDIS_PORT=6379
    depends_on:
      cache:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - laravel
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep 'artisan queue:work' | grep -v grep"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  scheduler:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    container_name: laravel_scheduler
    user: "${USER_ID:-1000}:${GROUP_ID:-1000}"
    command: >
      sh -c "while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done"
    volumes:
      - .:/var/www/html
      - ./storage/logs:/var/www/html/storage/logs
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=cache
      - REDIS_PORT=6379
    depends_on:
      - app
    networks:
      - laravel
    restart: on-failure

networks:
  laravel:
    driver: bridge

volumes:
  db_data: